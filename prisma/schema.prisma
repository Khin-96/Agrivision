generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("buyer")
  idVerified    Boolean   @default(false)
  idFrontUrl    String?
  idBackUrl     String?
  idType        String?
  phone         String?   // ✅ added
  address       String?   // ✅ added
  farmName      String?   // ✅ added
  farmLocation  String?   // ✅ added
  farmSize      String?   // ✅ added
  farmType      String?   // ✅ added
  authProvider  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt 

  accounts      Account[]
  sessions      Session[]
  products      Product[]   // ✅ relation to Product
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  category    String
  quantity    Int
  unit        String
  images      Json
  available   Boolean  @default(true)
  farmerId    String
  farmer      User     @relation(fields: [farmerId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  rating      Float    @default(0)
  reviews     Int      @default(0)
}
